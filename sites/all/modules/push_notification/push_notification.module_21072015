<?php
/**
* Implementing hook_menu
*/
function push_notification_menu(){
    $items = array();
    $items['admin/config/push_notification'] = array(
      'title' => t('Push Notifications configuration section'),
      'description' => 'Push Notifications configurations',
      'position' => 'left',
      'weight' => -100,
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('administer site configuration'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
    );
	$items['admin/config/push_notification/list'] = array(
     'title' => t('Push Notifications'),
     'description' => t('Push Notifications'),
     'page callback' => '_get_all_system_notifications',
     'access arguments' => array('administer site configuration'),
    );
	$items['admin/push_notification/add'] = array(
	 'title' => t('Create Push Notifications'),
     'description' => t('Create Push Notifications'),
     'page callback' => 'drupal_get_form',
     'access arguments' => array('administer site configuration'),
	 'page arguments' => array('push_notification_form'),
	 'type' => MENU_LOCAL_TASK,
	);
	$items['admin/push_notification/edit/%'] = array(
	 'title' => t('Create Push Notifications'),
     'description' => t('Create Push Notifications'),
     'page callback' => 'drupal_get_form',
     'access arguments' => array('administer site configuration'),
	 'page arguments' => array('push_notification_form',3),
	);
	$items['admin/push_notification/%/delete'] = array(
     'title' => 'Delete',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('notification_delete', 2),
     'access arguments' => array('administer site configuration'),
     'type' => MENU_CALLBACK,
    );
	
	$items['system_notifications/all'] = array(
        'title' => 'System Notifications',
        'description' => 'Link to My notifications',
        'page callback' => '_system_notifications_list',
        'access callback' => 'user_is_logged_in',
        'type' => MENU_LOCAL_TASK,
    );
	return $items;
}

function _get_all_system_notifications(){
	$output = l('Add push notification','admin/push_notification/add');
	$header = array('Message','Link','Start Date','End Date','Operations','');
	$query = db_select('system_notification','sn')
        ->fields('sn', array('notification_id','message','link','start_date','end_date'))
		->orderBy('notification_id', 'DESC');
    $result = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
    $rows = array();

    foreach($result as $record){
	    $start_date_array = getDate($record['start_date']);
		$end_date_array = getDate($record['end_date']);
        $rows[] = array($record['message'],
							 $record['link'],
							 $start_date_array['mon'].'/'.$start_date_array['mday'].'/'.$start_date_array['year'],
							 $end_date_array['mon'].'/'.$end_date_array['mday'].'/'.$end_date_array['year'],
							 l('edit','admin/push_notification/edit/'.$record['notification_id']),
							 l('delete', 'admin/push_notification/'.$record['notification_id'].'/delete'),
		);
    }
	$output.= theme('table', array('header' => $header,
                  	         'rows' => $rows ));
   return $output;
}

function push_notification_form($form, &$form_state){
	$startDateArray = array();
	$endDateArray = array();
	if(arg(2) == 'edit' && is_numeric(arg(3))){
	  $notification = _get_push_notification(arg(3));
	  if (isset($notification->start_date)){
		$startdateValue = getDate($notification->start_date);
		$startDateArray = array('month' => $startdateValue['mon'],
                       'day'   => $startdateValue['mday'],
                       'year'  => $startdateValue['year']);
	  } else {
		$startDateArray = array();
	  }
	  if (isset($notification->end_date)){
		$enddateValue = getDate($notification->end_date);
		$endDateArray = array('month' => $enddateValue['mon'],
                       'day'   => $enddateValue['mday'],
                       'year'  => $enddateValue['year']);
	  } else {
		$endDateArray = array();
	  }
	  $form['notification_id'] = array(
		'#type' => 'hidden',
		'#default_value' => $notification->notification_id,
	  );
	}
	$form['message'] = array (
	 '#title' => t('Message'),
	 '#type' => 'textarea',
	 '#required' => TRUE,
	 '#default_value' => isset($notification->message) ? $notification->message : '',
	);
	$form['link'] = array (
	 '#title' => t('Link'),
	 '#type' => 'textfield',
	 '#required' => TRUE,
	 '#default_value' => isset($notification->link) ? $notification->link : '',
	);
	$form['date'] = array(
	 '#type' => 'fieldset',
	 '#title' => t('Validity Date'),
	 '#collapsible' => FALSE,
     '#collapsed' => FALSE,
	);
	$form['date']['start_date'] = array (
	 '#title' => t('Start Date'),
	 '#type' => 'date',
	 '#required' => TRUE,
	  '#default_value' => $startDateArray,
	 '#date_format' => 'm-d-Y',
	);
	$form['date']['end_date'] = array (
	 '#title' => t('End Date'),
	 '#type' => 'date',
	 '#required' => TRUE,
	 '#default_value' => $endDateArray,
	);
	$form['submit'] = array (
	 '#type' => 'submit',
	 '#value' => t('Save'),
	 '#validate' => array('push_notification_form_validate'),
	 '#submit' => array('push_notification_form_submit'),
	);
	$form['actions']['cancel'] = array(
      '#markup' => l(t('Cancel'), 'admin/config/push_notification/list'),
      '#weight' => 20,
    );
	return $form;
}
function push_notification_form_validate($form, &$form_state) {
	$start_date = strtotime(date($form_state['values']['start_date']['year'].'-'.$form_state['values']['start_date']['month'].'-'.$form_state['values']['start_date']['day']));
	$end_date = strtotime(date($form_state['values']['end_date']['year'].'-'.$form_state['values']['end_date']['month'].'-'.$form_state['values']['end_date']['day']));
	if($start_date > $end_date){
		form_set_error('start_date','Start date should not be greater than end date');
	}
}
function push_notification_form_submit($form, &$form_state) {
    module_load_include('module', 'content_notification', 'content_notification');
	global $user;
	$message = $form_state['values']['message'];
	$link = $form_state['values']['link'];
	$start_date = strtotime(date($form_state['values']['start_date']['year'].'-'.$form_state['values']['start_date']['month'].'-'.$form_state['values']['start_date']['day']));
	$end_date = strtotime(date($form_state['values']['end_date']['year'].'-'.$form_state['values']['end_date']['month'].'-'.$form_state['values']['end_date']['day']));
	if(isset($form_state['values']['notification_id'])){
		$notification_id = $form_state['values']['notification_id'];
		$result = db_update('system_notification')
			->fields(array(
				'message' => $message,
				'link' => $link,
				'start_date' => $start_date,
				'end_date' => $end_date,
			))
			->condition('notification_id', $notification_id, '=')
            ->execute();
	}else{
	  $notification_id = db_insert('system_notification')
		->fields(array(
			'message' => $message,
			'link' => $link,
			'start_date' => $start_date,
			'end_date' => $end_date,
		))
		->execute();
		_add_notification(0, '', $notification_id, 'push_notification',$user->uid,'system');
	}
		drupal_set_message('Push Notification updated successfully');
}

function _get_push_notification($notification_id) {
	$query = db_select('system_notification', 'sn')
		->fields('sn',array('notification_id','message','link','start_date','end_date'))
		->condition('sn.notification_id',$notification_id);
	$result = $query->execute()->fetchAll();
	if(!empty($result)){
		return $result[0];
	}else{
		return NULL;
	}
}

function notification_delete($form, &$form_state, $notification) {
	$form = array();
	$form['notification_id'] = array(
		'#type' => 'value',
		'#value' => $notification,
	);
	return confirm_form($form, 
		t('Are you sure you want to delete this notification?'),
		'admin/config/push_notification/list',
		t('This action cannot be undone.'),
		t('Delete'),
		t('Cancel')
	);
	return $form;
}

/**
 * submit handler for the notification_delete
 * this function is invoked only when the user clicks confirm button
 * clickin on cancel, the user goes back to the $path
 */
function notification_delete_submit($form, &$form_state) {
	if (isset($form_state['values']['notification_id'])) {
		$notification_id = $form_state['values']['notification_id'];
		$delete_result = db_delete('system_notification')
						->condition('notification_id',$notification_id)
						->execute();
	}
	drupal_set_message('Notification deleted successfully');
	$form_state['redirect'] = 'admin/config/push_notification/list';
}

function _system_notifications_list(){
	$todays_date = strtotime(date('Y-m-d'));
	global $user;
	$result = db_query("select sn.* from system_notification sn where notification_id not in (select notification_id from system_notification_read where uid=$user->uid) 
			  AND (start_date <= $todays_date AND end_date >= $todays_date)");
	$push_notifications = array();
	foreach($result as $record){
		$push_notifications[] = $record;
	}
	return $push_notifications;
}